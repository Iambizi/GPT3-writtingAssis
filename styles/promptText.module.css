.promptContainer {
    place-content: flex-end center;
    align-items: center;
    display: flex;
    flex: 0 0 auto;
    flex-flow: column nowrap;
    gap: 16px;
    height: min-content;
    padding: 0px;
    width: min-content;
}

.promptBox {
    border-bottom-width: 1px;
    border-left-width: 1px;
    border-right-width: 1px;
    border-style: solid;
    border-top-width: 1px;
    place-content: flex-start;
    align-items: flex-start;
    background-color: rgba(255, 255, 255, 0.05);
    border-radius: 16px;
    display: flex;
    flex: 0 0 auto;
    flex-flow: column nowrap;
    gap: 10px;
    height: 150px;
    overflow: hidden;
    padding: 20px;
    position: relative;
    width: 610px;
    max-width: 1200px;
    will-change: transform;
    overflow: auto;
    outline: none;
    resize: none;
    font-size: 16px;
    font-style: normal;
    letter-spacing: 0px;
    line-height: 1.6em;
    text-align: start;
    color: black;
    text-decoration: none;
    text-transform: none;
}

.promptBox:focus {
    border-color:black;
}


.promptButtons {
    display: flex;
    place-content: center;
    align-items: center;
    justify-content: flex-end;
    flex: 0 0 auto;
    flex-flow: row nowrap;
    gap: 12px;
    height: min-content;
    overflow: hidden;
    padding: 5px;
    position: relative;
}

.key-stroke {
    outline: none;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    flex-shrink: 0;
    transform: none;
}

.key-stroke p {
    color: rgba(255, 255, 255, 0.75);
    flex: 0 0 auto;
    height: auto;
    position: relative;
    white-space: pre;
    width: auto;
}

.or {
    outline: none;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    flex-shrink: 0;
    transform: none;
}

.or p {
    color: rgba(255, 255, 255, 0.25)
}

.generateButton {
    place-content: flex-start;
    align-items: flex-start;
    /* background-color: rgb(255, 79, 18); */
    background: linear-gradient(#e66465, #9198e5);
    /* background-color: linear-gradient(#eee, #AA00FF); */
    border-radius: 100px;
    display: flex;
    flex: 0 0 auto;
    flex-flow: column nowrap;
    gap: 10px;
    height: min-content;
    overflow: hidden;
    padding: 16px 24px;
    position: relative;
    text-decoration: none;
    width: min-content;
    will-change: transform;
    cursor: pointer;
}

.generate {
    outline: none;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    flex-shrink: 0;
    transform: none;
}

.generate p {
    color: black;
    margin: 0;
}

.loading {
    opacity: 0.7;
    cursor: default;
}

.badge-container {
    display: flex;
    bottom: 20px;
    flex: 0 0 auto;
    height: auto;
    left: 20px;
    position: fixed;
    width: auto;
    z-index: 1;
}

.badge-container a {
    border-bottom-width: 1px;
    border-color: rgba(255, 255, 255, 0.1);
    border-left-width: 1px;
    border-right-width: 1px;
    border-style: solid;
    border-top-width: 1px;
    background-color: rgb(0, 0, 0);
    border-radius: 54.3478% / 238.095%;
    filter: grayscale(1);
    transform: none;
    transform-origin: 50% 50% 0px;
    font-size: 14px;
    font-weight: 700;
    letter-spacing: -0.5px;
    line-height: 1em;
    color: #fff;
    padding: 12px;
    text-decoration: none;
}

.badge {
    display: flex;
    align-items: center;
}

.badge img {
    width: 21px;
    height: 17px;
    image-rendering: pixelated;
    flex-shrink: 0;
    fill: black;
    color: black;
    transform: none;
    transform-origin: 50% 50% 0px;
    padding-right: 5px;
}

.badge p {
    margin: 0;
}

.grow {
    transition: all .2s ease-in-out;
}

.grow:hover {
    transform: scale(1.1);
}

.output {
    place-content: center flex-start;
    align-items: center;
    display: flex;
    flex: 0 0 auto;
    flex-flow: column nowrap;
    gap: 10px;
    height: min-content;
    max-width: 1200px;
    overflow: hidden;
    position: relative;
    width: 100%;
}

.outputHeaderContainer {
    place-content: center;
    align-items: center;
    display: flex;
    flex: 0 0 auto;
    flex-flow: column nowrap;
    gap: 16px;
    height: min-content;
    overflow: hidden;
    padding: 0px;
    position: relative;
    width: 100%;
}

.outputHeader h3 {
    
    font-size: 20px;
    font-style: normal;
    font-weight: 800;
    letter-spacing: 0px;
    line-height: 1.4em;
    text-align: start;
    color: black;
    text-decoration: none;
    text-transform: none;
    margin: 15px 0;
}

.output-content {
    outline: none;
    display: flex;
    /* max-width: 25%; */
    flex-direction: column;
    justify-content: flex-start;
    flex-shrink: 0;
    transform: none;
}

.output-content p {
    text-align: center;
    white-space: pre-line;
    color: rgba(255, 255, 255, 0.5);
}

@media (min-width: 810px) and (max-width: 1199px) {
    .container {
        max-width: 600px;
        width: 100%;
    }

    .promptContainer {
        max-width: 600px;
        width: 100%;
    }

    .promptBox {
        width: 100%;
    }
}

@media (max-width: 809px) {
    .container {
        max-width: 500px;
        width: 100%;
    }

    .promptContainer {
        max-width: 500px;
        width: 100%;
    }

    .promptBox {
        width: 100%;
    }
}

@media (max-width: 600px) {
    .container {
        max-width: 400px;
        width: 100%;
    }

    .headerTitle h1 {
        font-size: 50px;
    }

    .headerSubtitle h2 {
        text-align: center;
    }

    .key-stroke, .or {
        display: none;
    }

    .promptButtons {
        justify-content: center;
    }

    .promptContainer {
        max-width: 400px;
        width: 100%;
    }

    .promptBox {
        width: 100%;
    }
}



 /* Loading ring animation */
.loader {
    width: 18px;
    height: 18px;
    border-radius: 50%;
    display: inline-block;
    border-top: 2px solid #FFF;
    border-right: 2px solid transparent;
    box-sizing: border-box;
    animation: rotation 1s linear infinite;
}

@keyframes rotation {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}